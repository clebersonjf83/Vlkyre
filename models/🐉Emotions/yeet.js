("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// ‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨!
// ‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
// ‚ïë
// ‚ïë We won't be responsible for any kind of ban due to this bot.
// ‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
// ‚ïë It's your concern if you spam and gets your account banned.
// ‚ïë Also, Forks won't be entertained.
// ‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
// ‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
// ‚ïë In short, Fork At Your Own Risk.
// ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
require("../../global.js");
const ppath = require("path");
const psname = ppath.basename(__filename);
const pfname = psname.slice(0, -3).toLowerCase();
module.exports = async (ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, update, store) => {
  try {
    ŒΩ‚Ñì–∫—É—è—î
      .axios({
        method: "get",
        url: "https://magneum.vercel.app/api/emotions?q=" + pfname,
        headers: {
          accept: "*/*",
          "accept-language": "en-US,en;q=0.9",
          "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
        },
      })
      .then(async (response) => {
        var mData = response.data;
        console.log(mData);
        if (!mData.meta.url) {
          await ŒΩ‚Ñì–∫—É—è—î.sendMessage(ŒΩ‚Ñì–∫hat.chat, {
            react: {
              text: "‚ùå",
              key: ŒΩ‚Ñì–∫hat.key,
            },
          });
          return ŒΩ‚Ñì–∫hat.reply(
            `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname || ŒΩ‚Ñì–∫—É—è—î.Tname}_

*‚ùå Error* 
> There has been an API Error. Please try again later.`
          );
        }
        resp = mData.resp.id + ".mp4";
        ŒΩ‚Ñì–∫—É—è—î.ffmpeg
          .input(mData.meta.url)
          .outputOptions([
            "-pix_fmt yuv420p",
            "-c:v libx264",
            "-movflags +faststart",
            "-filter:v crop='floor(in_w/2)*2:floor(in_h/2)*2'",
          ])
          .output(resp)
          .on("end", async () => {
            if (ŒΩ‚Ñì–∫—É—è—î.args[0] && ŒΩ‚Ñì–∫—É—è—î.args[0].startsWith("@")) {
              let mention = ŒΩ‚Ñì–∫—É—è—î.mentionByTag;
              let dataFor =
                (await mention[0]) || ŒΩ‚Ñì–∫hat.msg.contextInfo.participant;
              return await ŒΩ‚Ñì–∫—É—è—î
                .sendMessage(
                  ŒΩ‚Ñì–∫hat.chat,
                  {
                    gifPlayback: true,
                    video: ŒΩ‚Ñì–∫—É—è—î.fs.readFileSync(resp),
                    caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*üéãFeeling:* ${pfname}
*üì¢From:* ${ŒΩ‚Ñì–∫—É—è—î.pushname}
*‚ö°For:* @${dataFor.split("@")[0] || ""}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
                    mentions: [dataFor, ŒΩ‚Ñì–∫hat.sender],
                  },
                  { quoted: ŒΩ‚Ñì–∫hat }
                )
                .then(ŒΩ‚Ñì–∫—É—è—î.fs.unlinkSync(resp));
              ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
            } else if (ŒΩ‚Ñì–∫—É—è—î.mentionByReply) {
              let dataFor =
                ŒΩ‚Ñì–∫hat.mtype == "extendedTextMessage" &&
                ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo != null
                  ? ŒΩ‚Ñì–∫hat.message.extendedTextMessage.contextInfo
                      .participant || ""
                  : "";
              return await ŒΩ‚Ñì–∫—É—è—î
                .sendMessage(
                  ŒΩ‚Ñì–∫hat.chat,
                  {
                    gifPlayback: true,
                    video: ŒΩ‚Ñì–∫—É—è—î.fs.readFileSync(resp),
                    caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*üéãFeeling:* ${pfname}
*üì¢From:* ${ŒΩ‚Ñì–∫—É—è—î.pushname}
*‚ö°For:* @${dataFor.split("@")[0] || ""}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
                    mentions: [dataFor, ŒΩ‚Ñì–∫hat.sender],
                  },
                  { quoted: ŒΩ‚Ñì–∫hat }
                )
                .then(ŒΩ‚Ñì–∫—É—è—î.fs.unlinkSync(resp));
              ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É m√•gneum ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
            } else {
              return await ŒΩ‚Ñì–∫—É—è—î
                .sendMessage(
                  ŒΩ‚Ñì–∫hat.chat,
                  {
                    gifPlayback: true,
                    video: ŒΩ‚Ñì–∫—É—è—î.fs.readFileSync(resp),
                    caption: `*VLkyre‚Ñ¢ By xhadr*\n*üíªHomePage:* https://bit.ly/xhadr\n\n
*‚ö°For:* ${ŒΩ‚Ñì–∫—É—è—î.pushname}
*üéãFeeling:* ${pfname}
> *Api Fetch Url:* https://magneum.vercel.app/api/emotions`,
                  },
                  { quoted: ŒΩ‚Ñì–∫hat }
                )
                .then(ŒΩ‚Ñì–∫—É—è—î.fs.unlinkSync(resp));
            }
          })
          .on("error", (error) => console.log(error))
          .run();
      });
  } catch (error) {
    return ŒΩ‚Ñì–∫—É—è—î.grab(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñì–∫hat, error);
  }
};
